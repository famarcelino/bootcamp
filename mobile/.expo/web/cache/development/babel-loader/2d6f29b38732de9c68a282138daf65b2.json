{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\treinamento\\\\devsuperior\\\\mobile\\\\src\\\\pages\\\\ProductDetails.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { api } from \"../services\";\nimport arrow from \"../assets/leftArrow.png\";\n\nvar ProductDetails = function ProductDetails(_ref) {\n  var id = _ref.route.params.id;\n\n  var _useState = useState({\n    id: null,\n    name: null,\n    description: null,\n    price: null,\n    imgUrl: null,\n    date: null,\n    categories: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      product = _useState2[0],\n      setProduct = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  function loadProductData() {\n    var res;\n    return _regeneratorRuntime.async(function loadProductData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.get(\"/products/\" + id));\n\n          case 3:\n            res = _context.sent;\n            setProduct(res.data);\n            setLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadProductData();\n  }, []);\n  return React.createElement(View, null, loading ? React.createElement(ActivityIndicator, {\n    size: \"large\"\n  }) : React.createElement(View, null, React.createElement(TouchableOpacity, null, React.createElement(Image, {\n    source: arrow\n  }), React.createElement(Text, null, \"Voltar\")), React.createElement(View, null)));\n};\n\nexport default ProductDetails;","map":{"version":3,"sources":["C:/treinamento/devsuperior/mobile/src/pages/ProductDetails.tsx"],"names":["React","useState","useEffect","TouchableOpacity","api","arrow","ProductDetails","id","route","params","name","description","price","imgUrl","date","categories","product","setProduct","loading","setLoading","loadProductData","get","res","data"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,GAAT;AAEA,OAAOC,KAAP;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAIjB;AAAA,MAFYC,EAEZ,QAHFC,KAGE,CAFEC,MAEF,CAFYF,EAEZ;;AAAA,kBAC4BN,QAAQ,CAAC;AACnCM,IAAAA,EAAE,EAAE,IAD+B;AAEnCG,IAAAA,IAAI,EAAE,IAF6B;AAGnCC,IAAAA,WAAW,EAAE,IAHsB;AAInCC,IAAAA,KAAK,EAAE,IAJ4B;AAKnCC,IAAAA,MAAM,EAAE,IAL2B;AAMnCC,IAAAA,IAAI,EAAE,IAN6B;AAOnCC,IAAAA,UAAU,EAAE;AAPuB,GAAD,CADpC;AAAA;AAAA,MACKC,OADL;AAAA,MACcC,UADd;;AAAA,mBAW4BhB,QAAQ,CAAC,KAAD,CAXpC;AAAA;AAAA,MAWKiB,OAXL;AAAA,MAWcC,UAXd;;AAaF,WAAeC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACID,YAAAA,UAAU,CAAC,IAAD,CAAV;AADJ;AAAA,6CAEsBf,GAAG,CAACiB,GAAJ,gBAAqBd,EAArB,CAFtB;;AAAA;AAEUe,YAAAA,GAFV;AAGIL,YAAAA,UAAU,CAACK,GAAG,CAACC,IAAL,CAAV;AACAJ,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOAjB,EAAAA,SAAS,CAAC,YAAM;AACZkB,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,IAAD,QAEQF,OAAO,GAAI,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC;AAAxB,IAAJ,GACH,oBAAC,IAAD,QACI,oBAAC,gBAAD,QACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEb;AAAf,IADJ,EAEI,oBAAC,IAAD,iBAFJ,CADJ,EAKI,oBAAC,IAAD,OALJ,CAHZ,CADJ;AAcH,CA1CD;;AA4CA,eAAeC,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Text, View, ActivityIndicator, Image } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { api } from '../services';\r\nimport { theme, text } from '../styles';\r\nimport arrow from '../assets/leftArrow.png';\r\n\r\nconst ProductDetails = ({\r\n    route: {\r\n        params: { id },\r\n    },\r\n}) => {\r\n    const [product, setProduct] = useState({\r\n        id: null,\r\n        name: null,\r\n        description: null,\r\n        price: null,\r\n        imgUrl: null,\r\n        date: null,\r\n        categories: [],\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function loadProductData() {\r\n        setLoading(true);\r\n        const res = await api.get(`/products/${id}`);\r\n        setProduct(res.data);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadProductData();\r\n    }, []);\r\n\r\n    return (\r\n        <View>\r\n            {\r\n                loading ? (<ActivityIndicator size=\"large\" />) :\r\n                    <View>\r\n                        <TouchableOpacity>\r\n                            <Image source={arrow} />\r\n                            <Text>Voltar</Text>\r\n                        </TouchableOpacity>\r\n                        <View></View>\r\n                    </View>\r\n            }\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;"]},"metadata":{},"sourceType":"module"}
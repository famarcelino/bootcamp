{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\treinamento\\\\devsuperior\\\\mobile\\\\src\\\\pages\\\\Catalog.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { ProductCard, SearchInput } from \"../components\";\nimport { api } from \"../services\";\nimport { theme } from \"../styles\";\n\nvar Catalog = function Catalog() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      products = _useState4[0],\n      setProducts = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  function fillProducts() {\n    var res;\n    return _regeneratorRuntime.async(function fillProducts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.get(\"/products?page=0&linesPerPage=12&direction=ASC&orderBy=name\"));\n\n          case 3:\n            res = _context.sent;\n            setProducts(res.data.content);\n            setLoading(false);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n  useEffect(function () {\n    fillProducts();\n  }, []);\n  var data = search.length > 0 ? products.filter(function (product) {\n    return product.name.toLowerCase().includes(search.toLowerCase());\n  }) : products;\n  return React.createElement(ScrollView, {\n    contentContainerStyle: theme.scrollContainer\n  }, React.createElement(SearchInput, {\n    placeholder: \"Nome do produto\",\n    search: search,\n    setSearch: setSearch\n  }), loading ? React.createElement(ActivityIndicator, {\n    size: \"large\"\n  }) : data.map(function (product) {\n    return React.createElement(ProductCard, _extends({}, product, {\n      key: product.id\n    }));\n  }));\n};\n\nexport default Catalog;","map":{"version":3,"sources":["C:/treinamento/devsuperior/mobile/src/pages/Catalog.tsx"],"names":["React","useState","useEffect","ProductCard","SearchInput","api","theme","Catalog","search","setSearch","products","setProducts","loading","setLoading","fillProducts","get","res","data","content","length","filter","product","name","toLowerCase","includes","scrollContainer","map","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB;AACA,SAASC,GAAT;AACA,SAASC,KAAT;;AAGA,IAAMC,OAAiB,GAAG,SAApBA,OAAoB,GAAM;AAAA,kBACAN,QAAQ,CAAC,EAAD,CADR;AAAA;AAAA,MACrBO,MADqB;AAAA,MACbC,SADa;;AAAA,mBAEIR,QAAQ,CAAC,EAAD,CAFZ;AAAA;AAAA,MAErBS,QAFqB;AAAA,MAEXC,WAFW;;AAAA,mBAGEV,QAAQ,CAAC,KAAD,CAHV;AAAA;AAAA,MAGrBW,OAHqB;AAAA,MAGZC,UAHY;;AAK5B,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACID,YAAAA,UAAU,CAAC,IAAD,CAAV;AADJ;AAAA,6CAEsBR,GAAG,CAACU,GAAJ,+DAFtB;;AAAA;AAEUC,YAAAA,GAFV;AAGIL,YAAAA,WAAW,CAACK,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAX;AACAL,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKC;AAEDX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAMG,IAAI,GAAGT,MAAM,CAACW,MAAP,GAAgB,CAAhB,GACTT,QAAQ,CAACU,MAAT,CAAgB,UAAAC,OAAO;AAAA,WAAIA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoChB,MAAM,CAACe,WAAP,EAApC,CAAJ;AAAA,GAAvB,CADS,GAEPb,QAFN;AAIA,SACI,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAEJ,KAAK,CAACmB;AAAzC,KACI,oBAAC,WAAD;AACI,IAAA,WAAW,EAAC,iBADhB;AAEI,IAAA,MAAM,EAAEjB,MAFZ;AAGI,IAAA,SAAS,EAAEC;AAHf,IADJ,EAMKG,OAAO,GACJ,oBAAC,iBAAD;AAAmB,IAAA,IAAI,EAAC;AAAxB,IADI,GAEHK,IAAI,CAACS,GAAL,CAAS,UAACL,OAAD;AAAA,WACV,oBAAC,WAAD,eAAiBA,OAAjB;AAA0B,MAAA,GAAG,EAAEA,OAAO,CAACM;AAAvC,OADU;AAAA,GAAT,CART,CADJ;AAeH,CAnCD;;AAqCA,eAAepB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ScrollView, ActivityIndicator } from 'react-native';\r\nimport { ProductCard, SearchInput } from '../components';\r\nimport { api } from '../services';\r\nimport { theme } from '../styles';\r\n\r\n\r\nconst Catalog: React.FC = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    async function fillProducts() {\r\n        setLoading(true);\r\n        const res = await api.get(`/products?page=0&linesPerPage=12&direction=ASC&orderBy=name`);\r\n        setProducts(res.data.content);\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fillProducts();\r\n    }, []);\r\n\r\n    const data = search.length > 0 ?\r\n        products.filter(product => product.name.toLowerCase().includes(search.toLowerCase()))\r\n        : products;\r\n\r\n    return (\r\n        <ScrollView contentContainerStyle={theme.scrollContainer}>\r\n            <SearchInput\r\n                placeholder=\"Nome do produto\"\r\n                search={search}\r\n                setSearch={setSearch}\r\n            />\r\n            {loading ? (\r\n                <ActivityIndicator size=\"large\" />\r\n            ) : (data.map((product) => (\r\n                <ProductCard {...product} key={product.id} />\r\n            )))\r\n            }\r\n        </ScrollView>\r\n    )\r\n};\r\n\r\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}
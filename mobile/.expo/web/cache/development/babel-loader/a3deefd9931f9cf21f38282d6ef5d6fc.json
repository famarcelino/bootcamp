{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\treinamento\\\\devsuperior\\\\mobile\\\\src\\\\pages\\\\Login.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { theme } from \"../styles\";\nimport eyesOpened from \"../assets/eyes-opened.png\";\nimport eyesClosed from \"../assets/eyes-closed.png\";\nimport arrow from \"../assets/arrow.png\";\n\nvar Login = function Login() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidePassword = _useState2[0],\n      setHidePassword = _useState2[1];\n\n  var _useState3 = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userInfo = _useState4[0],\n      setUserInfo = _useState4[1];\n\n  function handleLogin() {\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  ;\n  return React.createElement(View, {\n    style: theme.container\n  }, React.createElement(View, {\n    style: theme.card\n  }, React.createElement(Text, null, \"Login\"), React.createElement(View, {\n    style: theme.form\n  }, React.createElement(TextInput, {\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    style: theme.textInput,\n    value: userInfo.username,\n    onChangeText: function onChangeText(e) {\n      var newUserInfo = _objectSpread({}, userInfo);\n\n      newUserInfo.username = e;\n      setUserInfo(newUserInfo);\n    }\n  }), React.createElement(View, {\n    style: theme.passwordContainer\n  }, React.createElement(TextInput, {\n    placeholder: \"Senha\",\n    autoCapitalize: \"none\",\n    style: theme.textInput,\n    value: userInfo.password,\n    secureTextEntry: hidePassword,\n    onChangeText: function onChangeText(e) {\n      var newUserInfo = _objectSpread({}, userInfo);\n\n      newUserInfo.password = e;\n      setUserInfo(newUserInfo);\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: theme.toggle,\n    onPress: function onPress() {\n      return setHidePassword(!hidePassword);\n    }\n  }, React.createElement(Image, {\n    source: hidePassword ? eyesOpened : eyesClosed,\n    style: theme.eyes\n  })))), React.createElement(TouchableOpacity, {\n    style: theme.primaryButton,\n    activeOpacity: 0.8,\n    onPress: function onPress() {\n      return handleLogin();\n    }\n  }, React.createElement(View, null, React.createElement(Text, null, \"Fazer login\")), React.createElement(View, {\n    style: theme.arrowContainer\n  }, React.createElement(Image, {\n    source: arrow\n  })))));\n};\n\nexport default Login;","map":{"version":3,"sources":["C:/treinamento/devsuperior/mobile/src/pages/Login.tsx"],"names":["React","useState","theme","eyesOpened","eyesClosed","arrow","Login","hidePassword","setHidePassword","username","password","userInfo","setUserInfo","handleLogin","container","card","form","textInput","e","newUserInfo","passwordContainer","toggle","eyes","primaryButton","arrowContainer"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,SAASC,KAAT;AAEA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,KAAP;;AAEA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAAA,kBACcL,QAAQ,CAAC,IAAD,CADtB;AAAA;AAAA,MACnBM,YADmB;AAAA,MACLC,eADK;;AAAA,mBAEMP,QAAQ,CAAC;AACrCQ,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAFd;AAAA;AAAA,MAEnBC,QAFmB;AAAA,MAETC,WAFS;;AAM1B,WAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEC;AAED,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,KAAK,CAACY;AAAnB,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,KAAK,CAACa;AAAnB,KACI,oBAAC,IAAD,gBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,KAAK,CAACc;AAAnB,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,OADhB;AAEI,IAAA,cAAc,EAAC,MAFnB;AAGI,IAAA,YAAY,EAAC,eAHjB;AAII,IAAA,KAAK,EAAEd,KAAK,CAACe,SAJjB;AAKI,IAAA,KAAK,EAAEN,QAAQ,CAACF,QALpB;AAMI,IAAA,YAAY,EAAE,sBAACS,CAAD,EAAO;AACjB,UAAMC,WAAW,qBAAQR,QAAR,CAAjB;;AACAQ,MAAAA,WAAW,CAACV,QAAZ,GAAuBS,CAAvB;AACAN,MAAAA,WAAW,CAACO,WAAD,CAAX;AACH;AAVL,IADJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,KAAK,CAACkB;AAAnB,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAC,OADhB;AAEI,IAAA,cAAc,EAAC,MAFnB;AAGI,IAAA,KAAK,EAAElB,KAAK,CAACe,SAHjB;AAII,IAAA,KAAK,EAAEN,QAAQ,CAACD,QAJpB;AAKI,IAAA,eAAe,EAAEH,YALrB;AAMI,IAAA,YAAY,EAAE,sBAACW,CAAD,EAAO;AACjB,UAAMC,WAAW,qBAAQR,QAAR,CAAjB;;AACAQ,MAAAA,WAAW,CAACT,QAAZ,GAAuBQ,CAAvB;AACAN,MAAAA,WAAW,CAACO,WAAD,CAAX;AACH;AAVL,IADJ,EAaI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEjB,KAAK,CAACmB,MADjB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMb,eAAe,CAAC,CAACD,YAAF,CAArB;AAAA;AAFb,KAII,oBAAC,KAAD;AACI,IAAA,MAAM,EAAEA,YAAY,GAAGJ,UAAH,GAAgBC,UADxC;AAEI,IAAA,KAAK,EAAEF,KAAK,CAACoB;AAFjB,IAJJ,CAbJ,CAbJ,CAFJ,EAuCI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEpB,KAAK,CAACqB,aADjB;AAEI,IAAA,aAAa,EAAE,GAFnB;AAGI,IAAA,OAAO,EAAE;AAAA,aAAMV,WAAW,EAAjB;AAAA;AAHb,KAKI,oBAAC,IAAD,QACI,oBAAC,IAAD,sBADJ,CALJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,KAAK,CAACsB;AAAnB,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEnB;AAAf,IADJ,CARJ,CAvCJ,CADJ,CADJ;AAwDH,CAlED;;AAoEA,eAAeC,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View, TouchableOpacity, Image, TextInput } from 'react-native';\r\nimport { theme } from '../styles';\r\n\r\nimport eyesOpened from '../assets/eyes-opened.png';\r\nimport eyesClosed from '../assets/eyes-closed.png';\r\nimport arrow from '../assets/arrow.png';\r\n\r\nconst Login: React.FC = () => {\r\n    const [hidePassword, setHidePassword] = useState(true);\r\n    const [userInfo, setUserInfo] = useState({\r\n        username: \"\",\r\n        password: \"\"\r\n    });\r\n    async function handleLogin() {\r\n\r\n    };\r\n\r\n    return (\r\n        <View style={theme.container}>\r\n            <View style={theme.card}>\r\n                <Text>Login</Text>\r\n                <View style={theme.form}>\r\n                    <TextInput\r\n                        placeholder=\"Email\"\r\n                        autoCapitalize=\"none\"\r\n                        keyboardType=\"email-address\"\r\n                        style={theme.textInput}\r\n                        value={userInfo.username}\r\n                        onChangeText={(e) => {\r\n                            const newUserInfo = { ...userInfo };\r\n                            newUserInfo.username = e;\r\n                            setUserInfo(newUserInfo);\r\n                        }}\r\n                    />\r\n                    <View style={theme.passwordContainer}>\r\n                        <TextInput\r\n                            placeholder=\"Senha\"\r\n                            autoCapitalize=\"none\"\r\n                            style={theme.textInput}\r\n                            value={userInfo.password}\r\n                            secureTextEntry={hidePassword}\r\n                            onChangeText={(e) => {\r\n                                const newUserInfo = { ...userInfo };\r\n                                newUserInfo.password = e;\r\n                                setUserInfo(newUserInfo);\r\n                            }}\r\n                        />\r\n                        <TouchableOpacity\r\n                            style={theme.toggle}\r\n                            onPress={() => setHidePassword(!hidePassword)}\r\n                        >\r\n                            <Image\r\n                                source={hidePassword ? eyesOpened : eyesClosed}\r\n                                style={theme.eyes}\r\n                            />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n                <TouchableOpacity\r\n                    style={theme.primaryButton}\r\n                    activeOpacity={0.8}\r\n                    onPress={() => handleLogin()}\r\n                >\r\n                    <View>\r\n                        <Text>Fazer login</Text>\r\n                    </View>\r\n                    <View style={theme.arrowContainer}>\r\n                        <Image source={arrow} />\r\n                    </View>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}